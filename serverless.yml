service: transport-api

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-2
  lambdaHashingVersion: '20201221'
  environment: 
    DYNAMODB_TABLE_NAME: ${self:custom.postsTableName}

custom:
  postsTableName: posts-table-${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

functions:
  # _GET_
  getPost:
    handler: api.getPost
    name: get-post
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post/{postId}
          method: GET
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource: !GetAtt PostsTable.Arn

  # _CREATE_
  createPost:
    handler: api.createPost
    name: create-post
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post
          method: POST
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt PostsTable.Arn

# _UPDATE_
  updatePost:
    handler: api.updatePost
    name: update-post
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post/{postId}
          method: PUT
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt PostsTable.Arn

# _DELETE_ #
  deletePost:
    handler: api.deletePost
    name: delete-post
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post/{postId}
          method: DELETE
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource: !GetAtt PostsTable.Arn

  # _GET_ALL_POSTS # 
  # _This endpoint will be used for demo purposes only
  getAllPosts:
    handler: api.getAllPosts
    name: get-all-posts
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: posts
          method: GET
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource: !GetAtt PostsTable.Arn

resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.postsTableName}
        AttributeDefinitions:
          - AttributeName: postId
          - AttributeType: S
        KeySchema:
          - AttributeName: postId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
